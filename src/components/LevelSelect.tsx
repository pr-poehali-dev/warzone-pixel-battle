import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import type { User } from '../App';

interface LevelSelectProps {
  user: User;
  onBack: () => void;
  onSelectLevel: (level: number) => void;
}

export default function LevelSelect({ user, onBack, onSelectLevel }: LevelSelectProps) {
  const levels = [
    { num: 1, name: '–ü–æ–ª–∏–≥–æ–Ω', unlocked: true },
    { num: 2, name: '–ì—Ä–∞–Ω–∏—Ü–∞', unlocked: true },
    { num: 3, name: '–ë–∞–∑–∞', unlocked: true },
    { num: 4, name: '–ó–∞–≤–æ–¥', unlocked: true },
    { num: 5, name: '–ú–æ—Å—Ç', unlocked: true },
    { num: 6, name: '–ì–æ—Ä–æ–¥', unlocked: true },
    { num: 7, name: '–ê—ç—Ä–æ–ø–æ—Ä—Ç', unlocked: true },
    { num: 8, name: '–ë—É–Ω–∫–µ—Ä', unlocked: true },
    { num: 9, name: '–®—Ç–∞–±', unlocked: true },
    { num: 10, name: '–§–∏–Ω–∞–ª –ß.1', unlocked: true },
    { num: 10.2, name: '–§–∏–Ω–∞–ª –ß.2', unlocked: user.completedLevels.includes(10) },
  ];

  return (
    <div className="min-h-screen flex items-center justify-center p-4">
      <div className="w-full max-w-5xl">
        <Button onClick={onBack} variant="outline" className="mb-6 border-orange-500/50">
          <Icon name="ArrowLeft" className="w-4 h-4 mr-2" />
          –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
        </Button>

        <h1 className="text-4xl font-bold text-white text-center mb-8 orbitron">
          –í–´–ë–û–† –£–†–û–í–ù–Ø
        </h1>

        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
          {levels.map((level) => {
            const isCompleted = user.completedLevels.includes(level.num);
            const isLocked = !level.unlocked;

            return (
              <Card
                key={level.num}
                onClick={() => !isLocked && onSelectLevel(level.num)}
                className={`p-6 bg-slate-900/90 backdrop-blur-xl border-orange-500/30 transition-all ${
                  isLocked
                    ? 'opacity-40 cursor-not-allowed'
                    : 'hover:scale-105 cursor-pointer hover:border-orange-500'
                }`}
              >
                <div className="text-center">
                  <div className="text-4xl font-bold text-orange-500 mb-2 orbitron">
                    {level.num === 10.2 ? '10.2' : level.num}
                  </div>
                  <div className="text-white font-semibold mb-2">{level.name}</div>
                  {isCompleted && (
                    <div className="text-green-400 text-sm">‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ</div>
                  )}
                  {isLocked && (
                    <div className="text-red-400 text-sm">üîí –ó–∞–∫—Ä—ã—Ç–æ</div>
                  )}
                </div>
              </Card>
            );
          })}
        </div>

        {user.completedLevels.length === 11 && (
          <div className="mt-8 p-6 bg-gradient-to-r from-yellow-900/30 to-orange-900/30 border border-yellow-500/30 rounded-lg text-center">
            <div className="text-4xl mb-2">üéñÔ∏è</div>
            <div className="text-yellow-400 font-bold text-xl">–í—Å–µ —É—Ä–æ–≤–Ω–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!</div>
            <div className="text-gray-400 mt-2">–°–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∏—Å—Å–∏–∏</div>
          </div>
        )}
      </div>
    </div>
  );
}
